WGCNA Scriptsetwd("~/Desktop/Ament")library(WGCNA)options(stringsAsFactors = FALSE)Hades <- read.csv("applyfunctionCovarianceCorrected.csv", header = TRUE)Hermes <- as.data.frame(t(Hades[,-c(1)]))names(Hermes) = Hades[,1]rownames(Hermes) = names(Hades)[-c(1)]Hermes1 <- t(Hermes)gsg = goodSamplesGenes(Hermes1, verbose = 3);gsg$allOKsampleTree = hclust(dist(Hermes1), method = "average")plot(sampleTree, main = "Sample clustering to detect outliers")#abline(h = 30, col = “red”)#clust = cutreeStatic(sampleTree, cutHeight = 30, minSize = 25)#table(clust)#keepSamples = (clust==1)#Hestia = Hermes[keepSamples,]#nGenes = ncol(Hestia)#nSamples = nrow(Hestia)#colnames(Hestia)#rownames(Hestia)moretraits <- read.csv("GSE71620_series_matrixOri.csv")moretraitsgood <- t(moretraits)construct1 = moretraitsgood[,c(35,38:44,70)]samples = rownames(Hermes1)traitRows = match(samples, construct1[,9])datTraits = construct1[traitRows, -9]rownames(datTraits) = construct1[traitRows,9]collectGarbage()datTraits[,1] [datTraits[,1] == "Brain prefrontal cortex, broadman areas 47"] <- "1"datTraits[,1] [datTraits[,1] == "Brain prefrontal cortex, broadman areas 11"] <- "2"colnames(datTraits) <- c("Brain Region", "Age", "PMI", "pH", "RIN", "Sex", "Race", "TOD")datTraits[,2] <- gsub(".*:", "", datTraits[,2])datTraits[,3] <- gsub(".*:", "", datTraits[,3])datTraits[,4] <- gsub(".*:", "", datTraits[,4])datTraits[,5] <- gsub(".*:", "", datTraits[,5])datTraits[,6] <- gsub(".*:", "", datTraits[,6])datTraits[,7] <- gsub(".*:", "", datTraits[,7])datTraits[,8] <- gsub(".*:", "", datTraits[,8])datTraits[,6] [datTraits[,6] == " M"] <- "1"datTraits[,6] [datTraits[,6] == " F"] <- "2"datTraits[,7] [datTraits[,7] == " W"] <- "1"datTraits[,7] [datTraits[,7] == " B"] <- "2"datTraits[,2] <- as.numeric(datTraits[,2])datTraits[,1] <- as.numeric(datTraits[,1])datTraits[,3] <- as.numeric(datTraits[,3])datTraits[,4] <- as.numeric(datTraits[,4])datTraits[,5] <- as.numeric(datTraits[,5])datTraits[,6] <- as.numeric(datTraits[,6])datTraits[,7] <- as.numeric(datTraits[,7])datTraits[,8] <- as.numeric(datTraits[,8])sampleTree2 = hclust(dist(Hermes1), method = “average”)traitColors = numbers2colors(datTraits, signed = FALSE)plotDendroAndColors(sampleTree2, traitColors, groupLabels = names(datTraits), main = “Sample dendogram and trait heatmap”)

#Network Construction

net = blockwiseModules(Hermes1, power = 6, minModuleSize = 30,reassignThreshold = 0, mergeCutHeight = 0.25,numericLabels = TRUE, pamRespectsDendro = FALSE, saveTOMs = TRUE, saveTOMFileBase = "NetConst", verbose = 3)
mergedColors = labels2colors(net$colors)
plotDendroAndColors(net$dendrograms[[1]], mergedColors[net$blockGenes[[1]]],"Module colors", dendroLabels = FALSE, hang = 0.03, addGuide = TRUE, guideHang = 0.05)